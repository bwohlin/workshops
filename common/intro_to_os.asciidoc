== Brief Introduction to OpenShift

OpenShift is Red Hat's Container Application Platform. What this means in plain English is OpenShift helps your run Docker containers in an orchestrated and efficient way on a fleet of machines. OpenShift will handle all the networking, scheduling, services, and all the pieces that make a up a modern application.

To accomplish this there are required pieces to the platform. We use the Docker container engine to handle just the running of the containers. Above that there is Kubernetes, the Open Source project for orchestrating, scheduling, and other tasks for actually building real applications out of Docker containers. Finally, we layer on top of this the engineering work of OpenShift to build a developer and system adminstrator experience that allows for ease of use when developer and administering containerized applications.

For both Docker and Kubernetes, OpenShift does not do any forking or proprietary extensions. With an OpenShift cluster you can use the OpenShift interfaces OR you can always use the Docker and Kubernetes interfaces. Granted, those interfaces will only support operations possible in that part of the stack. 

I am going to put two diagrams here that we will be discussing in class. You can refer back to these diagrams while you do the exercices. The key points for these diagrams are:

1. You can look and see how all the pieces fit together
2. You can see which pieces are core Kubernetes (blue) and which pieces are OpenShift (gold).

Here is the top level, showing the pieces in the interfaces and authentication:

image::images/common/OpenShiftAccessAndControlColour.png[]

And here are the lower level pieces that make up the core objects.

[[arch-image]]
image::images/common/OpenShiftBuildsAndDeploymentsColour.png[]

Finally, here is a diagram showing how an OpenShift/Kubernetes cluster is put together from different data center "pieces"

image::images/common/IntroductionToOpenShift3Cluster.png[]

Now that we have done enough talking - the rest of the class will be action!

<<<