== Beginning Your Application

Let's go ahead and start our own project using Python. I chose Python for this workshop because I thought it would be easiest for you folks to understand regardless of your coding background. The development pattern you are going to use today will apply to any language you use for development in OpenShift.


=== Bringing in the Code
I am going to start with the command line but we will be moving back and forth between the command line and web UI today. 

==== Making a project

First we are going to make a new project for today's workshop. Projects are a "place" to put together all the pieces you want to logically group. This is usually a single application but it actually could be mutliple applications with multiple URLs.

At your command prompt go ahead and:

[source, bash]
----

> oc new-project spatialapp
Now using project "spatialapp" on server "https://10.2.2.2:8443"...

----

That's it - you now a project "spatialapp" and all the subsequent commands will affect this project until you swith to another project. To see all the projects that you have permissions to see go ahead and:

[source, bash]
----

> oc get projects

----

==== Adding Code and Doing a Build

The source code for this project can be found here:

https://github.com/thesteve0/v3simple-spatial

Now *BEFORE* you go and _git clone_ it down to your machine, you need to fork it. See that button up towards the top right that says fork on it - [underline]#click it# (you did login with your github account right?)

image::images/2_fork.png[]

Now you should be looking at URL that replaces _thesteve0_ with your github userid:

https://github.com/<your_userid>/v3simple-spatial

In the middle of the page you will see a button that says *SSH* on it. Please change that to SSH and then click the clipboard to copy the URL in the box.

image::images/2_ssh_to_https.png[]

Our code is ready. Let's fire off the build and deploy. In your terminal enter the following command:

[source, bash]
----

> oc new-app python:2.7~https://github.com/thesteve0/v3simple-spatial.git
--> Found image 596ac47 (11 days old) in image stream "python" in project "openshift" under tag "2.7" for "python:2.7"

    Python 2.7 
    ---------- 
    Platform for building and running Python 2.7 applications

    Tags: builder, python, python27, rh-python27

    * A source build using source code from https://github.com/thesteve0/v3simple-spatial.git will be created
      * The resulting image will be pushed to image stream "v3simple-spatial:latest"
    * This image will be deployed in deployment config "v3simple-spatial"
    * Port 8080/tcp will be load balanced by service "v3simple-spatial"
      * Other containers can access this service through the hostname "v3simple-spatial"

--> Creating resources with label app=v3simple-spatial ...
    imagestream "v3simple-spatial" created
    buildconfig "v3simple-spatial" created
    deploymentconfig "v3simple-spatial" created
    service "v3simple-spatial" created
--> Success
    Build scheduled, use 'oc logs -f bc/v3simple-spatial' to track its progress.
    Run 'oc status' to view your app.

----


What we just did is told OpenShift - take this https://github.com/openshift/s2i-python[Docker Image] that knows how to build a standard Python application layout and combine it with this source code and produce a new Docker Image. As part of this process the _new-app_ command knows we will need some other OpenShift objects to actually run that resulting image. The command goes ahead and makes those objects as well. 

TIP: TAKE A BREAK RIGHT HERE BECAUSE I AM GOING TALK YOU THROUGH ALL THOSE OBJECTS IT JUST BUILT. YOU WILL NEED THE DIAGRAMS FROM THE INTRODUCTION TO OPENSHIFT TO REFER TO.

==== Looking at what we built. 
